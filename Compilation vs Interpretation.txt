1. .Java file cannot be interpretated directly.
2. So, first we compile .java file to .class file and then it can be interpretated
   line by line by JVM (Java virtual machine).
3. In pyhton we can directly run it without any interpretation source.
4. We can interprete or we can compile a python program
5. But, in java we should have to first compile the program to .class file and then do interpretation
6. Class border load the memory 
     command prompt: 
          java -verbose
7. .class ---> class boader ---> Byte code verifier ---> Interpreter (JVM) ---> Runtime (JRE) ---> OutPut
8. In java name of the file and class name must be same
9. mkdir --> to create a folder
10. mkdir.java myfolder (myfolder is argument to mkdir)
11. the whole world of commands actually depends upon the command lines.
12. eg: man grep cannot work without command line

ERRORS:
- whenever the error occurs it crashes the whole program.
Types of Errors:
1. Syntax error --> gramatical mistake or any other mistake written wrong in the code.
2. Runtime error (or) exception // any error occurs when program is running.
3. Logical error --> suppose if you're expecting an output to be 5 but it came out to be 6 then it is called logical error.
// L error occurs due to improper use of operators or wrong algorithm.

InputMisMatchExcpetion - this error occurs if we enters the wrong input.

//       Throwable
             |
   _______________________
1. exception      2. error
- checked 
-unchecked

{ checked exceptions are checked at compile time eg. IOexception
Unchecked exceptions are checked at runtime. eg. InputMisMatchException. }

Keywords To handle Exceptions:

1.1 try : represents/contains code that we think has probabilty to generate/throw error at Runtime(exception).
1.2 catch : executes only if any error/exception occurs in try block. if there is no exception it will not execute.
1.3 finally
1.4 Throw
1.5 throws 

<<<<<<< HEAD

=======
>>>>>>> f52601dc09d716e275ea11a0fa19e53d869e677a
